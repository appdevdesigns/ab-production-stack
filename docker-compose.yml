version: "3.2"
services:

  #db: use Maria DB as our backend DB
  db:
    image: docker.io/library/mariadb:10.5.7
    ports:
    # Sub in your desired port number
    # Or comment this out to disable
      - "_DB_EXTERNAL_PORT_:3306"
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /secret/password
    volumes:
      - type: bind
        source: ./mysql/conf.d/my-noencrypt.cnf
        target: /etc/mysql/conf.d/my.cnf
      - type: bind
        source: ./mysql/init
        target: /docker-entrypoint-initdb.d
      - type: bind
        source: ./mysql/data
        target: /var/lib/mysql
      # - type: bind
      #   source: ./mysql/conf.d
      #   target: /etc/mysql/conf.d
      - type: bind
        source: ./mysql/key
        target: /key
      - type: bind
        source: ./mysql/password
        target: /secret/password
    # when there is a problem with : Error: ER_CRASHED_ON_USAGE: Table 'AAAAAA' is marked as crashed and should be repaired
    # this can happen with the alter table algorithm: try the safest(and slowest) COPY
    # command: ["mysqld", "--alter-algorithm=copy"]
    # on windows: use this command. (be sure to clear out mysql/data folder)
    # command: mysqld --innodb-flush-method=littlesync --innodb-use-native-aio=OFF --log_bin=ON
  #/db
  
  # See https://github.com/appdevdesigns/ab-production-image
  api_sails:
    image: docker.io/digiserve/ab-sails-api:latest
    depends_on: 
      - db
      - redis
    deploy:
      replicas: 1
      restart_policy: 
        condition: on-failure
    ports:
    # Sub in your desired port number
    # This is unencrypted http
      - "_SAILS_EXTERNAL_PORT_:1337"
    environment:
      - COTE_DISCOVERY_REDIS_HOST=redis
    volumes:
      - type: bind
        source: ./config/local.js
        target: /app/config/local.js
      - type: bind
        source: ./mysql/password
        target: /secret/password
      - type: bind
        source: ./data
        target: /app/data
  #/api_sails

  #redis: use redis to allow cote services to find each other across this stack
  redis:
    image: docker.io/library/redis:6.2.1
    #ports:
    #  - 6379:6379
    volumes:
      - type: bind
        source: ./redis/data
        target: /data
    command: redis-server --appendonly yes
  #/redis

  #notification_email
  # See https://github.com/appdevdesigns/ne-production-image
  notification_email:
    image: docker.io/digiserve/ab-notification-email
    environment:
      - COTE_DISCOVERY_REDIS_HOST=redis
    volumes:
      - type: bind
        source: ./config/local.js
        target: /app/config/local.js
    depends_on:
      - redis
      - api_sails
  #/notification_email

  #process_manager: (AppBuilder) a micro service to manage our process tasks
  # See https://github.com/appdevdesigns/pm-production-image
  process_manager:
    image: docker.io/digiserve/ab-process-manager:latest
    environment:
      - COTE_DISCOVERY_REDIS_HOST=redis
    volumes:
      - type: bind
        source: ./config/local.js
        target: /app/config/local.js
    depends_on:
      - redis
      - api_sails
  #/process_manager
